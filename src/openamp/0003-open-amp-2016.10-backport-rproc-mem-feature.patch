diff -uparN open-amp-2016.10/lib/include/openamp/remoteproc.h openamp/lib/include/openamp/remoteproc.h
--- open-amp-2016.10/lib/include/openamp/remoteproc.h	2019-06-22 21:57:52.863001000 -0400
+++ openamp/lib/include/openamp/remoteproc.h	2019-06-22 21:57:52.951001000 -0400
@@ -38,6 +38,10 @@
 
 #include "openamp/rpmsg.h"
 #include "openamp/firmware.h"
+
+
+#define RSC_RPROC_MEM_BACKPORT
+
 /**
  * struct resource_table - firmware resource table header
  * @ver: version number
@@ -113,11 +117,42 @@ enum fw_resource_type {
 	RSC_DEVMEM = 1,
 	RSC_TRACE = 2,
 	RSC_VDEV = 3,
+#ifdef RSC_RPROC_MEM_BACKPORT
+        RSC_RPROC_MEM = 4,
+	RSC_LAST = 5,
+#else
 	RSC_LAST = 4,
+#endif
 };
 
 #define FW_RSC_ADDR_ANY (0xFFFFFFFFFFFFFFFF)
 
+
+#ifdef RSC_RPROC_MEM_BACKPORT
+/**
+ * struct fw_rsc_rproc_mem - remote processor memory
+ * @da: device address
+ * @pa: physical address
+ * @len: length (in bytes)
+ * @reserved: reserved (must be zero)
+ *
+ * This resource entry tells the host to the remote processor
+ * memory that the host can be used as shared memory.
+ *
+ * These request entries should precede other shared resource entries
+ * such as vdevs, vrings.
+ */
+OPENAMP_PACKED_BEGIN
+struct fw_rsc_rproc_mem {
+        uint32_t type;
+        uint32_t da;
+        uint32_t pa;
+        uint32_t len;
+        uint32_t reserved;
+} OPENAMP_PACKED_END;
+
+#endif
+
 /**
  * struct fw_rsc_carveout - physically contiguous memory request
  * @da: device address
diff -uparN open-amp-2016.10/lib/remoteproc/rsc_table_parser.c openamp/lib/remoteproc/rsc_table_parser.c
--- open-amp-2016.10/lib/remoteproc/rsc_table_parser.c	2016-11-04 12:18:46.000000000 -0400
+++ openamp/lib/remoteproc/rsc_table_parser.c	2019-06-22 21:57:52.951001000 -0400
@@ -30,15 +30,47 @@
 #include "openamp/rsc_table_parser.h"
 #include "metal/io.h"
 
+#define RSC_RPROC_MEM_BACKPORT
+
+#ifdef RSC_RPROC_MEM_BACKPORT
+static int handle_dummy_rsc(struct remote_proc *rproc, void *rsc);
+#endif
+
 /* Resources handler */
 rsc_handler rsc_handler_table[] = {
 	handle_carve_out_rsc,
 	handle_dev_mem_rsc,
 	handle_trace_rsc,
 	handle_vdev_rsc,
+#ifdef RSC_RPROC_MEM_BACKPORT
+        handle_dummy_rsc, /**< rproc shared memory resource */
+#endif
 	handle_mmu_rsc
 };
 
+
+#ifdef RSC_RPROC_MEM_BACKPORT
+/**
+ * handle_dummy_rsc
+ *
+ * dummy resource handler.
+ *
+ * @param rproc - pointer to remote remoteproc
+ * @param rsc   - pointer to trace resource
+ *
+ * @returns - no service error
+ *
+ */
+static int handle_dummy_rsc(struct remote_proc *rproc, void *rsc)
+{
+        (void)rproc;
+        (void)rsc;
+
+        return RPROC_SUCCESS;
+}
+
+#endif
+
 /**
  * handle_rsc_table
  *
